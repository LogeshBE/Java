
package pathproblem;

import java.util.*;


public class Pathproblem {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the size of the Matrix");
        int N=sc.nextInt();
        
        int[][] arr=new int[N][N];
        System.out.println("Enter the value of the Matrix");
        for(int i=0;i<N;i++) for(int j=0;j<N;j++) arr[i][j]=sc.nextInt();
        
         
        System.out.println("Enter the start point index i & j");
        int starti=sc.nextInt(),startj=sc.nextInt();
        
        System.out.println("Enter the end point index i & j");
        int endi=sc.nextInt(),endj=sc.nextInt();
        
        Stack<Integer> stki=new Stack<>(),stkj=new Stack<>();
        stki.add(starti);stkj.add(startj);
        arr[endi][endj]=2;
        
        int i,j;
        while(true){
            
            i=stki.peek();j=stkj.peek();
            arr[i][j]=3;
            
            if(arr[i][j]==2) break;
            
            if(  j+1 < N && arr[i][j+1]!=0 && arr[i][j+1]!=3){
                stki.add(i);stkj.add(j+1);
                if(arr[i][j+1]==2) break;
            }
            else if( j-1 >=0 && arr[i][j-1]!=0 && arr[i][j-1]!=3){
                stki.add(i);stkj.add(j-1);
                if(arr[i][j-1]==2) break;
                
            }
            else if( i+1 < N && arr[i+1][j]!=0 && arr[i+1][j]!=3){
                stki.add(i+1);stkj.add(j);
                if(arr[i+1][j]==2) break;
            }
            else if( i-1 >= 0 && arr[i-1][j]!=0 && arr[i-1][j]!=3){
                stki.add(i-1);stkj.add(j);
                if(arr[i-1][j]==2) break;
            }
            else{
                stki.pop();stkj.pop();
            }
            
        }
        System.out.println("------------------The path for start to end point is -------------") ;
        while(!(stki.isEmpty() && stkj.isEmpty())){
            System.out.print(" ("+stki.pop()+" , "+stkj.pop()+") <- ");
        }
        
    }
    
}
