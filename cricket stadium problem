package java8;

import java.util.ArrayList;
import java.util.ListIterator;
import java.util.Scanner;
import java.util.Stack;

public class Java8 {
    static int res=0;
    static int x=0;
    static int osf,oef;
    public static void main(String[] args) {
        System.out.println("Enter the Starting date(S) and ending date(E) to take rent of the Cricket Stadium ");
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter the no.of records : ");
        int n=sc.nextInt();
        ArrayList<Integer> st=new ArrayList<>();
        ArrayList<Integer> ed=new ArrayList<>();
        for(int i=1;i<=n;i++)
        {   System.out.print(i+") (S) ");
            st.add(sc.nextInt());
            System.out.print("   (E) ");
             ed.add(sc.nextInt());
        }
        System.out.println("_____________________________________________________\n");
        System.out.println("The Entered Records are : ");
        ListIterator its= st.listIterator();
        ListIterator ite=ed.listIterator();
        while(its.hasNext() && ite.hasNext())
        {  System.out.print(its.next()+" - ");
           System.out.println(ite.next());
        }
        System.out.println("_____________________________________________________\n");
        Java8 obj=new Java8();
        Stack<Integer> stackst=new Stack<>();
        Stack<Integer> stacked=new Stack<>();
        ArrayList<Integer> finst=new ArrayList<>();
        ArrayList<Integer> fined=new ArrayList<>();
        ArrayList<Object> ordlist=obj.sort(st,ed,stackst,stacked,finst,fined);
            ArrayList<Integer> ordstart=(ArrayList) ordlist.get(0);
            ArrayList<Integer> ordend= (ArrayList) ordlist.get(1);
            ArrayList<Integer> start= (ArrayList) ordlist.get(2);
            ArrayList<Integer> end= (ArrayList) ordlist.get(3);
            Stack<Integer> stackstart=(Stack<Integer>) ordlist.get(4);
            Stack<Integer> stackend=(Stack<Integer>) ordlist.get(5);
            ArrayList<Integer> finstart=(ArrayList<Integer>) ordlist.get(6);
            ArrayList<Integer> finend=(ArrayList<Integer>) ordlist.get(7);
        obj.process(ordstart, ordend, start, end,stackstart,stackend,finstart,finend); 
        
    }
    
    ArrayList<Object> sort(ArrayList<Integer> start,ArrayList<Integer> end,
                           Stack<Integer> stackstart,Stack<Integer> stackend,
                           ArrayList<Integer> finstart,ArrayList<Integer> finend)
    {   
        ArrayList<Integer> tstart=new ArrayList<>();
        ArrayList<Integer> tend=new ArrayList<>();
        ListIterator<Integer> its,ite;
        its=start.listIterator();
        ite=end.listIterator();
        int a,b=0;
        while(its.hasNext() && ite.hasNext())
        { 
            int x= its.next();
            int y= ite.next();
            if(x==-1 && y==-1)
            {
                tstart.add(x);
                tend.add(y);
            }
            else if(!(x <=b))
            {   
                tstart.add(x);
                tend.add(y);
                 a=tstart.get(tstart.size()-1);
                 b=tend.get(tend.size()-1);
            }
        } 
        ArrayList<Object> ordlist=new ArrayList<>();
        ordlist.add(tstart);
        ordlist.add(tend);
        ordlist.add(start);
        ordlist.add(end);
        ordlist.add(stackstart);
        ordlist.add(stackend);
        ordlist.add(finstart);
        ordlist.add(finend);
        return ordlist;    
    }
    
    void  process(ArrayList<Integer> ordstart,ArrayList<Integer> ordend,
                      ArrayList<Integer> start,ArrayList<Integer> end,
                      Stack<Integer> stackstart,Stack<Integer> stackend,
                      ArrayList<Integer> finstart,ArrayList<Integer> finend)
    {  
        int temp=0;
        int sindx = 0,eindx=0; 
        ListIterator<Integer> los=ordstart.listIterator();
        ListIterator<Integer> loe=ordend.listIterator();
        while(los.hasNext()&&loe.hasNext())
        {
            int so=los.next(),eo=loe.next();
            if(so==-1 && eo==-1) ;
            else temp= temp + ( eo - so ) + 1;
        }
        if(temp>=res) 
        {  
            finstart.clear();
            finend.clear();
            finstart=(ArrayList<Integer>) ordstart.clone();
            finend=(ArrayList<Integer>) ordend.clone();
            res=temp;
        }
       ListIterator<Integer> ls,le;
       int s= los.previous(),e= loe.previous();
        int st,ed,c;
        if(x==0)
        {
              osf=ordstart.get(0);oef=ordend.get(0);
              x++;
        } 
       end : while( (s==osf && e==oef) || (los.hasPrevious() && loe.hasPrevious()))
       {
          c=0;
          ls=start.listIterator(); le=end.listIterator();
          while(ls.hasNext() && le.hasNext())
          {
             st= ls.next(); ed= le.next();
             if(s==st && e == ed)
             {  
                 sindx=ls.previousIndex();
                 eindx=le.previousIndex();
             }
             else if(st>=s && st<=e)
             {  
               stackstart.push(start.get(sindx));
               stackend.push(end.get(eindx));
               start.set(sindx, -1);
               end.set(eindx, -1);
               c++;
               break;
             }
           }
          
          if(c==0)
          {   
              if( s==osf && e==oef) 
              { 
                  break end;
              }
              s= los.previous();
              e= loe.previous();
              int index=start.size()-1;
              while(s==-1 && e==-1)
              {
                  int a=start.get(index),b=end.get(index);
                  if(s==-1 && e==-1 && los.hasPrevious()==false && loe.hasPrevious()==false)
                      {
                         break end; 
                      } 
                  if(a==-1 && b ==-1)
                  {
                      start.set(index, stackstart.pop());
                      end.set(index,stackend.pop() );
                      s= los.previous();
                      e= loe.previous();
                  }
                  else
                  {
                      index--;
                  }
              }
          }
          else
          {    Java8 obj=new Java8();
               ArrayList<Object> ordlist= obj.sort(start,end,stackstart,stackend,finstart,finend);
                    ArrayList<Integer> passordstart=(ArrayList) ordlist.get(0);
                    ArrayList<Integer> passordend= (ArrayList) ordlist.get(1);
                    ArrayList<Integer> passstart= (ArrayList) ordlist.get(2);
                    ArrayList<Integer> passend= (ArrayList) ordlist.get(3);
                    Stack<Integer> passstackstart=(Stack<Integer>) ordlist.get(4);
                    Stack<Integer> passstackend=(Stack<Integer>) ordlist.get(5);
                    ArrayList<Integer> passfinstart=(ArrayList<Integer>) ordlist.get(6);
                    ArrayList<Integer> passfinend=(ArrayList<Integer>) ordlist.get(7);
               obj.process(passordstart, passordend, passstart, passend,
                       passstackstart,passstackend,passfinstart,passfinend);
          }  
        }
       
       ls= finstart.listIterator();
       le= finend.listIterator();
       System.out.println("The Maximum Possiblility Days are "+res);
       System.out.println("The following dates are to obtain the maximum counts");
        while(ls.hasNext() && le.hasNext())
        {   int a=ls.next(),b=le.next();
            if(a==-1 && b==-1) continue;
            System.out.print(a+" <--> ");
            System.out.println(b);
        }
        System.out.println("________________________________________________");
        System.exit(0);
        
    }
    
}


------------------------------------------------------Below code logic is not correct----------------------
/* import java.io.*;
import java.util.*;

public class Java8 {

 
    public static void main(String[] args) {
        int i,j;
        int a[]=new int[]{1,2,3,4,7,9,10};
        int b[]=new int[]{3,3,5,7,8,12,11};
        int c[]=new int[6];
        int d[]=new int[6];
        int f[]=new int[6];
        int g[]=new int[6];
        int t[]=new int[6];
        int y[]=new int[6];
        c[0]=a[0];
        d[0]=b[0];
        int x=0;
        int z,q,r;
        int count=0;
        int length=0;
        int Total=0;
        int Temp=0;
  
        for( i=0;i<=6;i++)
        {  z=0;
           for(j=c[x];j<=d[x];j++)
           {
               if(a[i]==j)
               {
                  z++;
               }
           }
           if(z>0)
           {
               continue;
           }
           else
           {
               x++;
               c[x]=a[i];
               d[x]=b[i];
           }
        }
        for(i=0;i<=6;i++)
        {   if(c[i]==0) break;
            System.out.println(c[i]+" "+d[i]);
            count++;
            
        }

        System.out.println(count);
        int e[]=new int[count];
        for(i=0;i<count;i++)
        {    length=0;
            for(j=c[i];j<=d[i];j++)
            {
               length++; 
            }
            e[i]=length;
        }
        for(i=0;i<count;i++)
        {
            System.out.println(e[i]);
            Total=Total+e[i];
            
        } 
        System.out.println("Total Days = "+Total);
        if(Total>=Temp)
        {     
        for(i=0;i<count;i++)
        {
            f[i]=c[i];
            g[i]=d[i];
        }
        for(i=0;i<count;i++)
        {
            System.out.println(f[i]+" "+g[i]);
            
        }
        Temp=Total;
        }
        int i1,j1,i2,j2,v,count1,x2;
        int u=0;
        for(i=count-1;i>=0;i--)
        {   
           int a1[]=a.clone();
           int b1[]=b.clone();
           int c1[]=c.clone();
           int d1[]=d.clone();
           count1=count;
           for(v=count1-1;v>=0;v--)
           {  
               x2=0;
           for(i1=0;i1<=(6-1);i1++)
           {
               if((a1[i1+1]>=c1[v])&&(a1[i1+1]<=d1[v]))
               {
                   x2++;
                   for(j1=0;j1<=6;j1++)
                   {
                       if(c1[v]==a1[j1])
                       {   
                           t[u]=a1[j1];
                           y[u]=b1[j1];
                           a1[j1]=0;
                           b1[j1]=0;
                           u++;
                       }
                   }
                }
             
            } 
            if(x>0)
            {
                continue;
            }
               int m;
               x=0;
               for(m=0;m<=6;m++)
               {
                   if(a1[m]==0)
                   {
                       continue;
                   }
                   else
                   {
                      c1[x]=a1[m];
                      d1[x]=b1[m]; 
                   }
               }
               for( i2=0;i<=6;i++)
               {  z=0;
                  if(a1[i2]==0)
                  {
                      continue;
                  }
                  for(j2=c1[x];j2<=d1[x];j2++)
                 {
                    if(a1[i2]==j2)
                    {
                       z++;
                    }
                 }
                 if(z>0)
                 {
                    continue;
                 }
                 else
                 {
                    x++;
                    c1[x]=a1[i];
                    d1[x]=b1[i];
                 }
               }
               count1=x+1;
                int e1[]=new int[count1];
                for(i=0;i<count1;i++)
                {    length=0;
                     for(j=c[i];j<=d[i];j++)
                     {
                         length++; 
                      }
                    e[i]=length;
                }
                for(i=0;i<count1;i++)
                {
                     System.out.println(e[i]);
                     Total=Total+e[i];
            
                }
                if(Total>=Temp)
                {     
                     for(i=0;i<count1;i++)
                     {
                         f[i]=c[i];
                         g[i]=d[i];
                      }
                     for(i=0;i<count1;i++)
                     {
                           System.out.println(f[i]+" "+g[i]);
            
                      }
               
                }
           
            
            }
            
        }
        
    }
    
}

*/
